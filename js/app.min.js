/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nwindow.onload = function () {\n  if (document.querySelector('.header__user-about') !== null) {\n    const headerUserAbout = document.querySelector('.header__user-about');\n    const headerUserInformation = document.querySelector(\n      '.header__user-information',\n    );\n    headerUserAbout.addEventListener('click', (e) => {\n      headerUserAbout.classList.toggle('header__user-about--active');\n      headerUserInformation.classList.toggle('header__user-information--open');\n    });\n  }\n\n  if (document.querySelector('.filters__btn-providers') !== null) {\n    const filtersBtnProviders = document.querySelector(\n      '.filters__btn-providers',\n    );\n    const headerListProviders = document.querySelector(\n      '.filters__list-providers',\n    );\n    filtersBtnProviders.addEventListener('click', (e) => {\n      filtersBtnProviders.classList.toggle('filters__btn-providers--active');\n      headerListProviders.classList.toggle('filters__list-providers--open');\n    });\n  }\n\n  if (document.querySelector('.modals__btn') !== null) {\n    const arrModalsBtn = document.querySelectorAll('.modals__btn');\n    arrModalsBtn.forEach((modalBtn) => {\n      modalBtn.addEventListener('click', (e) => {\n        const modal = document.querySelector('.modal');\n        const className = modalBtn.dataset.modalContentClass;\n        const modalContent = document.querySelector('.' + className);\n        if (modal) {\n          modal.classList.add('modal--open');\n          modalContent.classList.add('modal__content--active');\n        }\n      });\n    });\n  }\n\n  if (document.querySelector('.modal') !== null) {\n    const modal = document.querySelector('.modal');\n    const modalWindow = document.querySelector('.modal__window');\n    const arrModalContent = document.querySelectorAll('.modal__content');\n    const arrModalClaseBtns = document.querySelectorAll('.modal__close-modal');\n\n    modal.addEventListener('click', (e) => {\n      modal.classList.remove('modal--open');\n      arrModalContent.forEach((modalContent) => {\n        modalContent.classList.remove('modal__content--active');\n      });\n    });\n    modalWindow.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    arrModalClaseBtns.forEach((modalClaseBtn) => {\n      modalClaseBtn.addEventListener('click', (e) => {\n        modal.classList.remove('modal--open');\n        arrModalContent.forEach((modalContent) => {\n          modalContent.classList.remove('modal__content--active');\n        });\n      });\n    });\n  }\n\n  /* Select */\n  if (document.querySelector('.js-select-providers')) {\n    const selectProviders = document.querySelectorAll('.js-select-providers');\n    selectProviders.forEach((select) => {\n      const selectListProviders = select.querySelector(\n        '.js-select-list-providers',\n      );\n      const currentText = select.querySelector('.select__current');\n      const selectItems = select.querySelectorAll('.select__item');\n      selectItems.forEach((item) => {\n        item.addEventListener('click', () => {\n          const text = item.innerHTML;\n          if (text) currentText.innerHTML = text;\n        });\n      });\n\n      select.addEventListener('click', (e) => {\n        select.classList.toggle('select--active');\n        selectListProviders.classList.toggle('select__list--hidden');\n      });\n    });\n  }\n\n  // Tabs\n  const tabsFunction = (selector, attr) => {\n    if (document.querySelector(selector)) {\n      const tabsBtns = document.querySelectorAll(selector);\n      const tabsContent = document.querySelectorAll('.tabs__content');\n      tabsBtns.forEach((btn) => {\n        btn.addEventListener('click', (e) => {\n          const tabId = btn.getAttribute(attr);\n          const cryptoNav = document.querySelector('.modal__nav-cripto');\n          if (cryptoNav) {\n            const nftBtn = cryptoNav.querySelector('[data-tabs=\"#tabsNft\"]');\n            if (\n              tabId === '#tabsBuy' ||\n              tabId === '#tabsSwap' ||\n              tabId === '#tabsTransfer'\n            ) {\n              cryptoNav.style.display = 'none';\n            } else if (tabId === '#tabsWithdraw') {\n              cryptoNav.style.display = '';\n              nftBtn.style.display = 'none';\n            } else {\n              nftBtn.style.display = '';\n              cryptoNav.style.display = '';\n            }\n          }\n          const currentTab = document.querySelector(`${tabId}`);\n          tabsContent.forEach((tab) => {\n            tab.classList.remove('active');\n          });\n          tabsBtns.forEach((item) => {\n            item.classList.remove('active');\n          });\n          if (!currentTab.classList.contains('active')) {\n            currentTab.classList.add('active');\n            btn.classList.add('active');\n          }\n        });\n      });\n    }\n  };\n  tabsFunction('[data-navtabs]', 'data-navtabs');\n  tabsFunction('[data-tabs]', 'data-tabs');\n\n  // Favourite\n  if (document.querySelector('.slot-open__button-favourite')) {\n    const btn = document.querySelector('.slot-open__button-favourite');\n    btn.addEventListener('click', (e) => {\n      btn.classList.toggle('active');\n    });\n  }\n\n  // Accordion\n  if (document.querySelector('[data-accordion]')) {\n    const items = document.querySelectorAll('[data-accordion]');\n    const btns = document.querySelectorAll('[data-accordion=\"btn\"]');\n\n    btns.forEach((btn) => {\n      btn.addEventListener('click', (e) => {\n        const parent = e.target.closest('[data-accordion=\"\"]');\n        if (parent) {\n          btn.classList.toggle('active');\n          parent.classList.toggle('active');\n        }\n      });\n    });\n  }\n\n  // Slot Favourite\n  if (document.querySelector('.slot__btn-favourites')) {\n    let arrSlotBtnFavourites = document.querySelectorAll(\n      '.slot__btn-favourites',\n    );\n    arrSlotBtnFavourites.forEach((slotBtnFavourites) => {\n      slotBtnFavourites.addEventListener('click', function (e) {\n        console.log(arrSlotBtnFavourites);\n        this.classList.toggle('slot__btn-favourites--active');\n      });\n    });\n  }\n\n  // Burger menu\n  if (document.querySelector('.header__burger')) {\n    const burgerBtn = document.querySelector('.header__burger');\n    const burgerMenu = document.querySelector('.header__nav');\n    burgerBtn.addEventListener('click', (e) => {\n      burgerBtn.classList.toggle('active');\n      burgerMenu.classList.toggle('show');\n      // burgerMenu.classList.toggle('btn--header-mask');\n    });\n  }\n\n  // Page Documents\n  if (\n    document.querySelector('.documents__nav-link') &&\n    document.querySelector('.documents__swiper')\n  ) {\n    const arrNavDocumentLinks = document.querySelectorAll(\n      '.documents__nav-link',\n    );\n    const hashDocument = window.location.hash;\n    if (\n      document.querySelector(\n        '.documents__nav-link[href=\"documents.html' + hashDocument + '\"]',\n      ) !== null\n    ) {\n      document\n        .querySelector('.documents__nav-link--active')\n        .classList.remove('documents__nav-link--active');\n      document\n        .querySelector(\n          '.documents__nav-link[href=\"documents.html' + hashDocument + '\"]',\n        )\n        .classList.add('documents__nav-link--active');\n    }\n    const SWIPERDOCUMENTS = new Swiper('.documents__swiper', {\n      slidesPerView: 1,\n      effect: 'fade',\n      hashNavigation: {\n        watchState: true,\n      },\n    });\n    arrNavDocumentLinks.forEach((navDocumentLink) => {\n      navDocumentLink.addEventListener('click', function (e) {\n        //e.preventDefault();\n        let documentIndex = this.dataset.indexDocument;\n        console.log(documentIndex);\n        SWIPERDOCUMENTS.slideTo(parseInt(documentIndex), 0, true);\n        document\n          .querySelector('.documents__nav-link--active')\n          .classList.remove('documents__nav-link--active');\n        this.classList.add('documents__nav-link--active');\n      });\n    });\n  }\n\n  // Page Guides\n  if (\n    document.querySelector('.guides__nav-link') &&\n    document.querySelector('.guides__swiper')\n  ) {\n    let arrNavGuideLinks = document.querySelectorAll('.guides__nav-link');\n    let hashGuide = window.location.hash;\n    if (\n      document.querySelector(\n        '.guides__nav-link[href=\"guides.html' + hashGuide + '\"]',\n      ) !== null\n    ) {\n      document\n        .querySelector('.guides__nav-link--active')\n        .classList.remove('guides__nav-link--active');\n      document\n        .querySelector('.guides__nav-link[href=\"guides.html' + hashGuide + '\"]')\n        .classList.add('guides__nav-link--active');\n    }\n    const SWIPEGUIDES = new Swiper('.guides__swiper', {\n      slidesPerView: 1,\n      effect: 'fade',\n      hashNavigation: {\n        watchState: true,\n      },\n    });\n    arrNavGuideLinks.forEach((navGuideLink) => {\n      navGuideLink.addEventListener('click', function (e) {\n        let guideIndex = this.dataset.indexGuide;\n        SWIPEGUIDES.slideTo(parseInt(guideIndex), 0, true);\n        document\n          .querySelector('.guides__nav-link--active')\n          .classList.remove('guides__nav-link--active');\n        this.classList.add('guides__nav-link--active');\n      });\n    });\n  }\n\n  // Audio\n  const audioPlayer = document.querySelector('.js-audio-player');\n  const audio = new Audio('files/audio/vegas-live.mp3');\n\n  audio.addEventListener(\n    'loadeddata',\n    () => {\n      audio.volume = 0.75;\n      audio.loop = true;\n    },\n    false,\n  );\n\n  const lasVegasBtn = audioPlayer.querySelector('.js-toggle-las-vegas-btn');\n  lasVegasBtn.addEventListener(\n    'click',\n    () => {\n      if (audio.paused) {\n        lasVegasBtn.classList.remove('play');\n        lasVegasBtn.classList.add('pause');\n        audio.play();\n      } else {\n        lasVegasBtn.classList.remove('pause');\n        lasVegasBtn.classList.add('play');\n        audio.pause();\n      }\n    },\n    false,\n  );\n\n  // Bonus timer\n  if (document.querySelector('.bonuses__timer') !== null) {\n    const getTimeRemaining = (endtime) => {\n      const total = Date.parse(endtime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n\n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds,\n      };\n    };\n\n    const initializeClock = (endtime) => {\n      const hoursDiv = document.querySelector('.js-bonuses-time-hours');\n      const minutesDiv = document.querySelector('.js-bonuses-time-minutes');\n      const secondsDiv = document.querySelector('.js-bonuses-time-seconds');\n\n      const updateClock = () => {\n        const t = getTimeRemaining(endtime);\n\n        hoursDiv.innerHTML = ('0' + t.hours).slice(-2);\n        minutesDiv.innerHTML = ('0' + t.minutes).slice(-2);\n        secondsDiv.innerHTML = ('0' + t.seconds).slice(-2);\n\n        if (t.total <= 0) {\n          clearInterval(timeinterval);\n        }\n      };\n\n      updateClock();\n      const timeinterval = setInterval(updateClock, 1000);\n    };\n\n    const deadline = new Date(Date.parse(new Date()) + 23 * 59 * 59 * 1000);\n    initializeClock(deadline);\n  }\n};\n\n\n\n//# sourceURL=webpack://mydevby.github.io/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;